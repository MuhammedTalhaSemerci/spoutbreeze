plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java-library'
    id 'maven-publish'
}

group = 'org.spoutbreeze'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'com.google.guava:guava:29.0-jre'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'spoutbreeze-commons'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'SpoutBreeze Java Commons Library'
                description = 'SpoutBreeze Java Commons Library for JVM Components'
                url = 'https://spoutbreeze.org'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'ghazitriki'
                        name = 'Ghazi Triki'
                        email = 'ghazi.triki@riadvice.tn'
                    }
                    developer {
                        id = 'yasmineherzali'
                        name = 'Yasmine Harzalli'
                        email = 'yasmine.harzalli@riadvice.tn'
                    }
                }
            }
        }
    }
    repositories {
        maven {
        	// Not needed but put as reference
            mavenLocal() 
        }
    }
}
